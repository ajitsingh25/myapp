apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-resource
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: api-svc
          servicePort: 80
          
---

kind: ConfigMap 
apiVersion: v1
metadata:
  name: my-configmap 
data:
  APP_PORT: "5000"
  MONGODB_HOSTNAME: "db-svc"
  APP_DEBUG: "False"
  MONGO_INITDB_ROOT_USERNAME: "root"
  MONGO_INITDB_ROOT_PASSWORD: "rootpassword"
  
---

kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: slow
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-standard
  
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db
spec:
  serviceName: db
  replicas: 1
  selector:
    matchLabels:
      type: db
  template:
    metadata:
      labels:
        type: db
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: db
        image: mongo:latest
        ports:
          - containerPort: 27017
        resources:
          limits:
            memory: 100Mi
            cpu: 0.1
          requests:
            memory: 50Mi
            cpu: 0.01
        envFrom:
          - configMapRef:
              name: my-configmap
        volumeMounts:
          - name: mongo-persistent-storage
            mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
      # annotations:
      # volume.beta.kubernetes.io/storage-class: "slow"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
          
---

apiVersion: v1
kind: Service
metadata:
  name: db-svc
spec:
  ports:
  - name: db
    port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    type: db
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      type: api
  template:
    metadata:
      labels:
        type: api
    spec:
      containers:
      - name: api
        image: ajitsingh25/myapp:1.0
        envFrom:
          - configMapRef:
              name: my-configmap
          # - secretRef:
          #     name: my-creds
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5000
          periodSeconds: 1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000
        resources:
          limits:
            memory: 200Mi
            cpu: 0.2
          requests:
            memory: 100Mi
            cpu: 0.02
            
---

apiVersion: v1
kind: Service
metadata:
  name: api-svc
spec:
#   type: NodePort
  ports:
  - port: 80
    name: http
    targetPort: 5000
  selector:
    type: api